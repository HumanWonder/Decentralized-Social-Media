{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { hexToUint8Array, parseBaseType } from '../utils.js';\nimport { isHexStrict } from './string.js';\n/**\n * checks input if typeof data is valid Uint8Array input\n */\nexport const isUint8Array = data => {\n  var _a;\n  return data instanceof Uint8Array || ((_a = data === null || data === void 0 ? void 0 : data.constructor) === null || _a === void 0 ? void 0 : _a.name) === 'Uint8Array';\n};\nexport const isBytes = (value, options = {\n  abiType: 'bytes'\n}) => {\n  if (typeof value !== 'string' && !Array.isArray(value) && !isUint8Array(value)) {\n    return false;\n  }\n  // isHexStrict also accepts - prefix which can not exists in bytes\n  if (typeof value === 'string' && isHexStrict(value) && value.startsWith('-')) {\n    return false;\n  }\n  if (typeof value === 'string' && !isHexStrict(value)) {\n    return false;\n  }\n  let valueToCheck;\n  if (typeof value === 'string') {\n    if (value.length % 2 !== 0) {\n      // odd length hex\n      return false;\n    }\n    valueToCheck = hexToUint8Array(value);\n  } else if (Array.isArray(value)) {\n    if (value.some(d => d < 0 || d > 255 || !Number.isInteger(d))) {\n      return false;\n    }\n    valueToCheck = new Uint8Array(value);\n  } else {\n    valueToCheck = value;\n  }\n  if (options === null || options === void 0 ? void 0 : options.abiType) {\n    const {\n      baseTypeSize\n    } = parseBaseType(options.abiType);\n    return baseTypeSize ? valueToCheck.length === baseTypeSize : true;\n  }\n  if (options === null || options === void 0 ? void 0 : options.size) {\n    return valueToCheck.length === (options === null || options === void 0 ? void 0 : options.size);\n  }\n  return true;\n};","map":{"version":3,"names":["hexToUint8Array","parseBaseType","isHexStrict","isUint8Array","data","_a","Uint8Array","constructor","name","isBytes","value","options","abiType","Array","isArray","startsWith","valueToCheck","length","some","d","Number","isInteger","baseTypeSize","size"],"sources":["/home/student/Bureau/méta/Decentralized-Social-Media/node_modules/web3-validator/src/validation/bytes.ts"],"sourcesContent":["﻿/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { ValidInputTypes } from '../types.js';\nimport { hexToUint8Array, parseBaseType } from '../utils.js';\nimport { isHexStrict } from './string.js';\n\n/**\n * checks input if typeof data is valid Uint8Array input\n */\nexport const isUint8Array = (data: ValidInputTypes): data is Uint8Array =>\n\tdata instanceof Uint8Array || data?.constructor?.name === 'Uint8Array';\n\nexport const isBytes = (\n\tvalue: ValidInputTypes | Uint8Array | number[],\n\toptions: { abiType: string; size?: never } | { size: number; abiType?: never } = {\n\t\tabiType: 'bytes',\n\t},\n) => {\n\tif (typeof value !== 'string' && !Array.isArray(value) && !isUint8Array(value)) {\n\t\treturn false;\n\t}\n\n\t// isHexStrict also accepts - prefix which can not exists in bytes\n\tif (typeof value === 'string' && isHexStrict(value) && value.startsWith('-')) {\n\t\treturn false;\n\t}\n\n\tif (typeof value === 'string' && !isHexStrict(value)) {\n\t\treturn false;\n\t}\n\n\tlet valueToCheck: Uint8Array;\n\n\tif (typeof value === 'string') {\n\t\tif (value.length % 2 !== 0) {\n\t\t\t// odd length hex\n\t\t\treturn false;\n\t\t}\n\t\tvalueToCheck = hexToUint8Array(value);\n\t} else if (Array.isArray(value)) {\n\t\tif (value.some(d => d < 0 || d > 255 || !Number.isInteger(d))) {\n\t\t\treturn false;\n\t\t}\n\t\tvalueToCheck = new Uint8Array(value);\n\t} else {\n\t\tvalueToCheck = value;\n\t}\n\n\tif (options?.abiType) {\n\t\tconst { baseTypeSize } = parseBaseType(options.abiType);\n\n\t\treturn baseTypeSize ? valueToCheck.length === baseTypeSize : true;\n\t}\n\n\tif (options?.size) {\n\t\treturn valueToCheck.length === options?.size;\n\t}\n\n\treturn true;\n};\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAkBA,SAASA,eAAe,EAAEC,aAAa,QAAQ,aAAa;AAC5D,SAASC,WAAW,QAAQ,aAAa;AAEzC;;;AAGA,OAAO,MAAMC,YAAY,GAAIC,IAAqB,IAAwB;EAAA,IAAAC,EAAA;EACzE,OAAAD,IAAI,YAAYE,UAAU,IAAI,EAAAD,EAAA,GAAAD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEG,WAAW,cAAAF,EAAA,uBAAAA,EAAA,CAAEG,IAAI,MAAK,YAAY;AAAA;AAEvE,OAAO,MAAMC,OAAO,GAAGA,CACtBC,KAA8C,EAC9CC,OAAA,GAAiF;EAChFC,OAAO,EAAE;CACT,KACE;EACH,IAAI,OAAOF,KAAK,KAAK,QAAQ,IAAI,CAACG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,IAAI,CAACP,YAAY,CAACO,KAAK,CAAC,EAAE;IAC/E,OAAO,KAAK;;EAGb;EACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIR,WAAW,CAACQ,KAAK,CAAC,IAAIA,KAAK,CAACK,UAAU,CAAC,GAAG,CAAC,EAAE;IAC7E,OAAO,KAAK;;EAGb,IAAI,OAAOL,KAAK,KAAK,QAAQ,IAAI,CAACR,WAAW,CAACQ,KAAK,CAAC,EAAE;IACrD,OAAO,KAAK;;EAGb,IAAIM,YAAwB;EAE5B,IAAI,OAAON,KAAK,KAAK,QAAQ,EAAE;IAC9B,IAAIA,KAAK,CAACO,MAAM,GAAG,CAAC,KAAK,CAAC,EAAE;MAC3B;MACA,OAAO,KAAK;;IAEbD,YAAY,GAAGhB,eAAe,CAACU,KAAK,CAAC;GACrC,MAAM,IAAIG,KAAK,CAACC,OAAO,CAACJ,KAAK,CAAC,EAAE;IAChC,IAAIA,KAAK,CAACQ,IAAI,CAACC,CAAC,IAAIA,CAAC,GAAG,CAAC,IAAIA,CAAC,GAAG,GAAG,IAAI,CAACC,MAAM,CAACC,SAAS,CAACF,CAAC,CAAC,CAAC,EAAE;MAC9D,OAAO,KAAK;;IAEbH,YAAY,GAAG,IAAIV,UAAU,CAACI,KAAK,CAAC;GACpC,MAAM;IACNM,YAAY,GAAGN,KAAK;;EAGrB,IAAIC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEC,OAAO,EAAE;IACrB,MAAM;MAAEU;IAAY,CAAE,GAAGrB,aAAa,CAACU,OAAO,CAACC,OAAO,CAAC;IAEvD,OAAOU,YAAY,GAAGN,YAAY,CAACC,MAAM,KAAKK,YAAY,GAAG,IAAI;;EAGlE,IAAIX,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEY,IAAI,EAAE;IAClB,OAAOP,YAAY,CAACC,MAAM,MAAKN,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEY,IAAI;;EAG7C,OAAO,IAAI;AACZ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}